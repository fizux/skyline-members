;;;;;;;;;;;;;;;;;;;;
; about .ini files ;
;;;;;;;;;;;;;;;;;;;;
;
; this is a simple PHP-parseable ini file. 
;
; - one section contains settings for one user, section names are user names,
;   they are written in square brackets like [username].
; - specifying settings:
;    settingname=settingvalue
;    settingname="some words here"
; - lines like this (starting with ; ) are comments.
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; overriding config.inc.php settings ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; for any user, you can override the settings of config.inc.php.
; you can set different locales or charsets for different users by 
; specifying the 'locale' or 'charset' settings, and different
; iconsets and/or bandwidth control by overriding their settings. 
;
; just simply use the same setting name as used in config.inc.php.
; it doesn't matter if you use it in lower case in the .ini files:
; they'll be converted to the 'FSGuide-standard' upper case while
; processing.
;
; order of processing: 
; 1) config.inc.php settings are applied
; 2) a) if user auth is used, the [currentuser_here] settings 
;       will override config.inc.php
;    b) if user auth is not used, the [default] settings 
;       will override config.inc.php

;;;;;;;;;;;;;;;;;;;;;;;;;
; Default user settings ;
;;;;;;;;;;;;;;;;;;;;;;;;;
;
; if you want to disable user authentication for some reason,
; you can set the appropriate setting in config.php.
; in such a case, the settings of this default user is used.
;
; if you would like to define a new user, 
; the login name of the user should be enclosed in square 
; brackets like in this example:
;
;   [joegod]
;   password=joespassword
;   dir0=/,+ALL
;   bookmarks=/,/home/joe,/works/web/example.com
;   startdir_left="/home/joe"
;   startdir_right="/"
;

[default]
;
; startdir_left=left_panel_full_path
; startdir_right=right_panel_full_path
;
; if you leave start directories empty, FSGuide will use its own home
; directory at startup
;
startdir_left=
startdir_right=

; the 'bookmarks' setting is a comma-separated list of
; directories, they'll surely help a lot, just give it a try!
bookmarks=

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; about user access configuration ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; access privileges are controlled by numbered lines of 
; access control rules like:
;
;   dirN=full_directory_path/[, (+|-)NAME_OF_RIGHT ]...
;
; 1) the access configuration you set here DOES NOT override the file
;    permission configuration of your server.
;    The files you want to make accessible for your user[s] must be
;    readable by the user of the webserver (eg. nobody or www-data)
; 2) always use TRAILING SLASHES for the directories 
;    (your users will be notified if you did not)
; 3) always use DIFFERENT numbers for the N-part of "dirN" (the settings name)
;    (it is the only way of defining multiple rules while keeping
;    the .ini file still readable)
; 4) the privileges are INHERITED - once you disable access to the root 
;    directory, access to all subentries of root (the whole filesystem) 
;    will be disabled.
; 5) if you want to override a previous rule, you have to 
;    place the overriding rule later. For example:
; 
;    WORKING EXAMPLE:
;       dir1=/www,-ALL      
;       dir2=/www/example.com/,+ALL   // this will work
;
;    WRONG EXAMPLE:
;       dir1=/www/example.com/,+ALL   // this will NOT work, because it's
;       dir2=/www,-ALL		      // parent is disabled later
;
; the following rights are available 
; (implemented rights are defined up-to-date in includes/user.common.php):
;
; ACCESS 	(dirlist, view files, download)
; RENAME 	(rename files)
; MOVEFROM 	(move files away from a directory)
; COPY 		(copy to a directory (or move to))
; DELETE 	(delete files, directories)
; MKDIR 	(create directory)
; MODIFY 	(edit files of a directory)
; UPLOAD 	(upload files to a directory)
; FILELIST 	(assemble filelist)
;
; examples of access control rules:
;
;  dir1=/,-ALL				; it's a "best practice" to disable 
;					; everything by default
;  dir2=/www/,+ACCESS			; every subdirectory under /www/
;					; will have the +ACCESS rights from now
;  dir3=/www/example.com/,+ALL,-DELETE  ; this subdirectory and its subentries
;					; are fully tamperable, the only
;					; exception is deletion
;  dir4=/www/example.com/test/,+ALL	; this subdirectory and its subentries
;					; are fully tamperable
;
; these two rules will ENABLE FULL ACCESS to your whole filesystem,
; no matter what kind of operating system you use (Windows-based or 
; Linux/Unix-based). this is a simple 'universal' solution, ofcourse 
; you only need to specify rules that fit your OS/filesystem

dir0=c:/,+ALL
dir1=/,+ALL
